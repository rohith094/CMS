Application number (function generated)
AdmissionNo (autogenerated)
RegistrationNo(autogenerated)
RegistrationID (function generated after registration)(jntuno in future )

Joiningdate (current data)
FirstName
MiddleName
LastName
mobile
alternatemobile
email
gender
dob
branch (fetched)
joining year
quota
admissiontype
Fathername
Mothername
scholarshipholder
moa





CREATE TABLE studentinfo (
    stdid INT UNIQUE AUTO_INCREMENT,
    applicationnumber VARCHAR(20) UNIQUE,
    admissionnumber VARCHAR(20) UNIQUE,
    registrationid VARCHAR(20) PRIMARY KEY,
    joiningdate DATE,
    firstname VARCHAR(50),
    middlename VARCHAR(50),
    lastname VARCHAR(50),
    studentaadhar VARCHAR(12),
    mobile VARCHAR(15),
    alternatemobile VARCHAR(15),
    personalemail VARCHAR(50),
    gender VARCHAR(10),
    dob DATE,
    branch VARCHAR(50),
    joiningyear INT,
    quota VARCHAR(50),
    admissiontype VARCHAR(50),
    fathername VARCHAR(50),
    mothername VARCHAR(50),
    fatheraadhar VARCHAR(12),
    motheraadhar VARCHAR(12),
    scholarshipholder varchar(20),
    presentaddress TEXT,
    presentpincode VARCHAR(10),
    currentaddress TEXT,
    currentpincode VARCHAR(10),
    moa VARCHAR(50),
    remarks text,
    entrancetype varchar(10),
    entrancehallticket varchar(50),
    rank varchar(50),
    city varchar(50),
    state varchar(50),
    nationality varchar(50),
    religion varchar(20),
    caste varchar(20),
    castecategory varchar(20)
);		

CREATE TABLE semesters (
    semesterid INT Unique AUTO_INCREMENT,
    semesternumber INT primary key NOT NULL,
    semestername VARCHAR(255) NOT NULL,
    startdate DATE NOT NULL,
    enddate DATE NOT NULL,
    batchyear int not null,
    semesteractive int NOT NULL );


CREATE TABLE branches (
    branchid INT UNIQUE AUTO_INCREMENT,
    branchcode VARCHAR(20) PRIMARY KEY NOT NULL,
    branchname VARCHAR(100) NOT NULL,
    hodname VARCHAR(100),
    blocknumber INT,
    branchshortcut VARCHAR(20)
);


CREATE TABLE courses (
    courseid INT UNIQUE AUTO_INCREMENT,
    coursecode VARCHAR(20) PRIMARY KEY NOT NULL,
    coursename VARCHAR(255) NOT NULL,
    coursecredits INT NOT NULL,
    semesternumber INT,
    branchcode VARCHAR(20),
    coursetype varchar(50),
    FOREIGN KEY (semesternumber) REFERENCES semesters(semesternumber),
    FOREIGN KEY (branchcode) REFERENCES branches(branchcode)
);

